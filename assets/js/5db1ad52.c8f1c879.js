"use strict";(self.webpackChunkojlm=self.webpackChunkojlm||[]).push([[924],{3905:function(e,t,a){a.d(t,{Zo:function(){return c},kt:function(){return m}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var u=n.createContext({}),l=function(e){var t=n.useContext(u),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},c=function(e){var t=l(e.components);return n.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,u=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=l(a),m=r,h=d["".concat(u,".").concat(m)]||d[m]||p[m]||o;return a?n.createElement(h,i(i({ref:t},c),{},{components:a})):n.createElement(h,i({ref:t},c))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=d;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var l=2;l<o;l++)i[l]=a[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},8861:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return s},contentTitle:function(){return u},metadata:function(){return l},toc:function(){return c},default:function(){return d}});var n=a(7462),r=a(3366),o=(a(7294),a(3905)),i=["components"],s={},u="\u81ea\u5b9a\u4e49\u8ba4\u8bc1\u65b9\u5f0f\u548c\u4efb\u52a1\u901a\u77e5",l={unversionedId:"api/plugins",id:"api/plugins",isDocsHomePage:!1,title:"\u81ea\u5b9a\u4e49\u8ba4\u8bc1\u65b9\u5f0f\u548c\u4efb\u52a1\u901a\u77e5",description:"\u76ee\u524d\u7684\u57fa\u672c\u5b9e\u73b0\u9700\u8981\u4f9d\u8d56 Playframeword \u7684 Modules \u673a\u5236 https://www.playframework.com/documentation/2.6.x/Modules .",source:"@site/docs/api/plugins.md",sourceDirName:"api",slug:"/api/plugins",permalink:"/docs/api/plugins",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\u6743\u9650\u63a7\u5236",permalink:"/docs/api/permissions"},next:{title:"UI",permalink:"/docs/ui"}},c=[{value:"\u81ea\u5b9a\u4e49\u8ba4\u8bc1\u53ca\u7b7e\u540d",id:"\u81ea\u5b9a\u4e49\u8ba4\u8bc1\u53ca\u7b7e\u540d",children:[{value:"\u5b9e\u73b0 <code>AuthorizeAndValidate</code>",id:"\u5b9e\u73b0-authorizeandvalidate",children:[]},{value:"\u4f8b\u5b50 1",id:"\u4f8b\u5b50-1",children:[]},{value:"\u4f8b\u5b50 2 Basic Access Authentication",id:"\u4f8b\u5b50-2-basic-access-authentication",children:[]}]},{value:"\u81ea\u5b9a\u4e49\u4efb\u52a1\u901a\u77e5",id:"\u81ea\u5b9a\u4e49\u4efb\u52a1\u901a\u77e5",children:[{value:"\u5b9e\u73b0 <code>JobNotifyFunction</code>",id:"\u5b9e\u73b0-jobnotifyfunction",children:[]},{value:"\u4f8b\u5b50",id:"\u4f8b\u5b50",children:[]}]},{value:"\u81ea\u5b9a\u4e49\u65ad\u8a00\u7c7b\u578b",id:"\u81ea\u5b9a\u4e49\u65ad\u8a00\u7c7b\u578b",children:[{value:"\u5b9e\u73b0 <code>Assertion</code>",id:"\u5b9e\u73b0-assertion",children:[]},{value:"\u4f8b\u5b50",id:"\u4f8b\u5b50-2",children:[]}]}],p={toc:c};function d(e){var t=e.components,s=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},p,s,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"\u81ea\u5b9a\u4e49\u8ba4\u8bc1\u65b9\u5f0f\u548c\u4efb\u52a1\u901a\u77e5"},"\u81ea\u5b9a\u4e49\u8ba4\u8bc1\u65b9\u5f0f\u548c\u4efb\u52a1\u901a\u77e5"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"\u76ee\u524d\u7684\u57fa\u672c\u5b9e\u73b0\u9700\u8981\u4f9d\u8d56 Playframeword \u7684 Modules \u673a\u5236 ",(0,o.kt)("a",{parentName:"p",href:"https://www.playframework.com/documentation/2.6.x/Modules"},"https://www.playframework.com/documentation/2.6.x/Modules")," .\n\u53ef\u4ee5\u81ea\u5df1\u751f\u6210 jar \u653e\u5230 lib \u6587\u4ef6\u5939\u4e0b,\u53c2\u8003 ",(0,o.kt)("a",{parentName:"p",href:"https://www.playframework.com/documentation/2.6.x/SBTDependencies#Managing-library-dependencies"},"https://www.playframework.com/documentation/2.6.x/SBTDependencies#Managing-library-dependencies"))),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"\u4e0b\u9762\u7684\u4f8b\u5b50\u662f\u5728\u6e90\u7801\u7684\u57fa\u7840\u4e0a\u5efa\u4e00\u4e2a\u5355\u72ec\u7684\u5b50\u9879\u76ee\u7684\u65b9\u5f0f\n\u53c2\u8003\u9879\u76ee\uff1a",(0,o.kt)("a",{parentName:"p",href:"https://github.com/ojlm/asura/tree/master/asura-example/"},"https://github.com/ojlm/asura/tree/master/asura-example/"))),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Commit\uff1a",(0,o.kt)("a",{parentName:"p",href:"https://github.com/ojlm/asura/commit/25adb4eb537a85c5ab89cf2923067b6fd7dccaef"},"https://github.com/ojlm/asura/commit/25adb4eb537a85c5ab89cf2923067b6fd7dccaef"))),(0,o.kt)("h2",{id:"\u81ea\u5b9a\u4e49\u8ba4\u8bc1\u53ca\u7b7e\u540d"},"\u81ea\u5b9a\u4e49\u8ba4\u8bc1\u53ca\u7b7e\u540d"),(0,o.kt)("h3",{id:"\u5b9e\u73b0-authorizeandvalidate"},"\u5b9e\u73b0 ",(0,o.kt)("inlineCode",{parentName:"h3"},"AuthorizeAndValidate")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},'trait AuthorizeAndValidate {\n\n  // \u8ba4\u8bc1\u7c7b\u578b\u7684ID, \u6574\u4e2a\u7cfb\u7edf\u9700\u8981\u552f\u4e00\n  val `type`: String\n  // \u63cf\u8ff0,markdown \u8bed\u6cd5\n  val description: String\n  // \u6570\u636e\u6a21\u677f,\u9ed8\u8ba4\u503c,\u9700\u8981\u662f json \u7c7b\u578b\n  val template: String = "{}"\n\n  // \u7b7e\u540d\u903b\u8f91\u5b9e\u73b0,\u7b2c\u4e00\u4e2a `request` \u662f\u539f\u59cb\u7684\u8bf7\u6c42, `auth` \u662f\u672c\u8eab\u7b7e\u540d\u7b97\u6cd5\u9700\u8981\u7684 \u6570\u636e,\u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u52a0\u5bc6/\u7b7e\u540d\u540e\u7684\u8bf7\u6c42\n  def authorize(request: HttpRequest, auth: Authorization): Future[HttpRequest]\n\n  // \u672c\u7b7e\u540d\u5b9e\u73b0\u4f9d\u8d56\u7684\u6570\u636e\u6709\u6548\u6027\u7684\u9a8c\u8bc1\u51fd\u6570\n  def validate(auth: Authorization): BoolErrorRes\n}\n')),(0,o.kt)("h3",{id:"\u4f8b\u5b50-1"},"\u4f8b\u5b50 1"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("a",{parentName:"p",href:"https://github.com/ojlm/asura/blob/master/asura-example/src/main/scala/com/example/asura/auth/ExampleAuth.scala"},"https://github.com/ojlm/asura/blob/master/asura-example/src/main/scala/com/example/asura/auth/ExampleAuth.scala"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},'// config \u662f\u6240\u6709\u7684\u914d\u7f6e,\u81ea\u5b9a\u4e49\u7684\u914d\u7f6e\u53ef\u4ee5\u6dfb\u52a0\u5230\u5e94\u7528\u7684\u914d\u7f6e\u6587\u4ef6\u4e2d\nclass ExampleAuth(config: Configuration) extends AuthorizeAndValidate {\n  override val `type`: String = "ExampleAuth"\n  override val description: String =\n    """# ExampleAuth do nothing\n      |markdown syntax\n    """.stripMargin\n  override val template: String =\n    """{\n      |    "appKey" : "",\n      |    "appSecret" : ""\n      |}\n    """.stripMargin\n\n  override def authorize(request: HttpRequest, auth: Authorization): Future[HttpRequest] = {\n    Future.successful(request)\n  }\n  override def validate(auth: Authorization): (Boolean, String) = (true, null)\n}\n')),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"\u4e0a\u9762\u8fd9\u4e2a\u5b9e\u73b0\u5b9e\u9645\u4e0a\u4ec0\u4e48\u90fd\u6ca1\u505a.\u5728\u524d\u7aef\u4f1a\u589e\u52a0\u8fd9\u6837\n",(0,o.kt)("img",{src:a(4961).Z}))),(0,o.kt)("h3",{id:"\u4f8b\u5b50-2-basic-access-authentication"},"\u4f8b\u5b50 2 Basic Access Authentication"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"\u5b9a\u4e49\uff1a",(0,o.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Basic_access_authentication"},"https://en.wikipedia.org/wiki/Basic_access_authentication"))),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("a",{parentName:"p",href:"https://github.com/ojlm/asura/blob/master/asura-app/app/asura/app/api/auth/BasicAuth.scala"},"https://github.com/ojlm/asura/blob/master/asura-app/app/asura/app/api/auth/BasicAuth.scala"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},'object BasicAuth extends AuthorizeAndValidate {\n  override val `type`: String = "Basic Auth"\n  override val description: String =\n    """## Basic Auth\n      |> Add a header with the key `Authorization` and the value a string encoded by base64.\n      |\n      |### Example\n      |\n      |If the data is as below:\n      |\n      |```json\n      |{\n      |    "username" : "a",\n      |    "password": "b"\n      |}\n      |```\n      |\n      |A header `Authorization: Basic YTpi` will be added. `YTpi` is generated by call `Base64.encode("a:b")`.\n      |\n    """.stripMargin\n  override val template: String =\n    """{\n      |    "username" : "",\n      |    "password": ""\n      |}\n    """.stripMargin\n  override def authorize(request: HttpRequest, auth: Authorization): Future[HttpRequest] = {\n    val username = auth.data.get("username")\n    val password = auth.data.get("password")\n    val bytes = Base64.getEncoder.encode(s"${username.get}:${password.get}".getBytes(StandardCharsets.UTF_8))\n    val value = new String(bytes, StandardCharsets.UTF_8)\n    Future.successful(request.withHeaders(request.headers :+ RawHeader("Authorization", s"Basic ${value}")))\n  }\n  override def validate(auth: Authorization): (Boolean, String) = {\n    val username = auth.data.get("username")\n    val password = auth.data.get("password")\n    if (username.isEmpty || password.isEmpty) {\n      (false, "username and password can\'t be empty")\n    } else {\n      (true, null)\n    }\n  }\n}\n')),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("img",{src:a(5068).Z}))),(0,o.kt)("h2",{id:"\u81ea\u5b9a\u4e49\u4efb\u52a1\u901a\u77e5"},"\u81ea\u5b9a\u4e49\u4efb\u52a1\u901a\u77e5"),(0,o.kt)("h3",{id:"\u5b9e\u73b0-jobnotifyfunction"},"\u5b9e\u73b0 ",(0,o.kt)("inlineCode",{parentName:"h3"},"JobNotifyFunction")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},"trait JobNotifyFunction {\n  /** id for every type of notification mechanism */\n  val `type`: String\n  val description: String\n\n  def notify(execDesc: JobExecDesc, subscriber: JobNotify): Future[NotifyResponse]\n}\n")),(0,o.kt)("h3",{id:"\u4f8b\u5b50"},"\u4f8b\u5b50"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("a",{parentName:"p",href:"https://github.com/ojlm/asura/blob/master/asura-example/src/main/scala/com/example/asura/notify/ExampleNotification.scala"},"https://github.com/ojlm/asura/blob/master/asura-example/src/main/scala/com/example/asura/notify/ExampleNotification.scala"))),(0,o.kt)("h2",{id:"\u81ea\u5b9a\u4e49\u65ad\u8a00\u7c7b\u578b"},"\u81ea\u5b9a\u4e49\u65ad\u8a00\u7c7b\u578b"),(0,o.kt)("h3",{id:"\u5b9e\u73b0-assertion"},"\u5b9e\u73b0 ",(0,o.kt)("inlineCode",{parentName:"h3"},"Assertion")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},"trait Assertion {\n\n  val description = StringUtils.EMPTY\n  val name: String\n  // \u5b9e\u9645\u503c\u548c\u671f\u671b\u503c\n  def assert(actual: Any, expect: Any): Future[AssertResult]\n}\n")),(0,o.kt)("h3",{id:"\u4f8b\u5b50-2"},"\u4f8b\u5b50"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},'// \u603b\u662f\u901a\u8fc7\nobject ExampleAssertion extends Assertion {\n\n  override val name: String = "$example"\n  override val description: String = ""\n\n  override def assert(actual: Any, expect: Any): Future[AssertResult] = {\n    Future.successful(PassAssertResult())\n  }\n}\n')),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"\u7cfb\u7edf\u81ea\u5e26\u5b9e\u73b0\u7684\u4e00\u4e9b ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/ojlm/asura/tree/master/asura-core/src/main/scala/asura/core/assertion"},"https://github.com/ojlm/asura/tree/master/asura-core/src/main/scala/asura/core/assertion"))))}d.isMDXComponent=!0},5068:function(e,t,a){t.Z=a.p+"assets/images/plugin-auth-basic-53b6c82b6df8eeba28283eba95805179.png"},4961:function(e,t,a){t.Z=a.p+"assets/images/plugin-auth-example-e15ee0dc600697e92327e15a5ac1a009.png"}}]);